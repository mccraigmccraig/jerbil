$:.unshift File.join( File.dirname(__FILE__),  "..", "lib" )

require 'rake'
require 'jerbil'
require 'buildconfig'

include JavaHelper

load_vm(CLASSPATH, JAVA_BUILD_DIR)

task :default => :compile

desc "compile all java files"
Rake::JavacTask.new(:compile) do |t|
  t.java_files = JAVA_FILES
  t.options :nowarn, :debug
  t.source = "1.5"
  t.target = "1.5" 
end

desc "compile all tests"
Rake::JavacTask.new(:test_compile) do |t|
  t.java_files = JAVA_TEST_FILES
  t.depends_on :compile
end

desc "run tests"
Rake::TestNG::TestNGTask.new(:test) do |t|
  t.outputdir = TESTOUTPUTDIR
  t.tests     = JAVA_TEST_FILES
  t.depends_on :test_compile
end

Rake::JavaDocTask.new do |t|
  t.sourcepath = SOURCE_DIR
  t.subpackages = "jerbil"
  t.dstdir = JAVADOC_DIR
  t.options :quiet  
  t.depends_on :compile
end

Rake::JarTask.new do |t|
  t.dir = JAVA_BUILD_DIR
  t.filename = DISTJAR
  t.depends_on :clean, :compile
end

Rake::JavaTask.new(:run, "jerbil.sample.Main") do |t|
  t.classpath = CLASSPATH
  t.parameters = [ "20", "50" ]
  t.depends_on :compile
end

Rake::JavaTask.new(:run_in_vm, "jerbil.sample.Main") do |t|
  t.classpath = CLASSPATH
  t.parameters = [ "20", "50" ]
  t.depends_on :compile
  t.in_vm = true 
end

Rake::JavaTask.new(:run_forked, "jerbil.sample.Main") do |t|
  t.classpath = CLASSPATH
  t.parameters = [ "50", "-50" ]
  t.depends_on :compile
  t.fork = true
end

Rake::JavaTask.new(:run_forked_fail, "jerbil.sample.Main") do |t|
  t.classpath = CLASSPATH
  t.parameters = [ "0", "20" ]
  t.depends_on :compile 
  t.fork = true
end

Rake::JavaTask.new(:test_java_task, "jerbil.sample.Main2") do |t|
  t.classpath = CLASSPATH
  t.sys_property "jerbil.foo", "baz" 
  t.max_mem = 64
  t.logging_conf = "foo.properties"
  t.fork = true
  t.depends_on :compile
end

desc "find annotations and write output to #{ANNOTATED_CLASSES}"
Rake::AptTask.new(:find_annotations) do |t|
  t.java_files= JAVA_FILES
  t.nocompile = true
  t.depends_on :compile
  t.find_annotation 'jerbil.sample.MyAnnotation' do |classes|
    File.open(ANNOTATED_CLASSES, 'w') { |f| f << classes.to_yaml }
  end
end

file ANNOTATED_CLASSES => [ :find_annotations ]

task :clean do |t|
  RakeFileUtils.verbose(false) do
    rm_rf BUILD_DIR
    rm_rf DIST_DIR
    rm_rf TESTOUTPUTDIR
  end
end

